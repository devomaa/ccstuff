
local mainTerm = _G.term.current()

local mainW, mainH = mainTerm.getSize()
local shellTerm = window.create(mainTerm, 1, 1, mainW, mainH - 1)
_G.term.redirect(shellTerm)

local lineTerm = window.create(mainTerm, 1, mainH, mainW, 1)

local statusline = {}
_G.statusline = statusline

statusline.blocks = {}

function statusline.add(block)
    statusline.blocks[#statusline.blocks+1] = block
end

function statusline.redraw()
  lineTerm.clear()
  lineTerm.setCursorPos(1,1)
  for i,block in pairs(statusline.blocks) do
    lineTerm.write("|")

    local str = ""
    local tpe = type(block)
    if tpe == "function" then
      str = block()
    elseif tpe == "string" then
      str = block
    else
      str = tostring(block)
    end

    lineTerm.write(str)
  end
  if #statusline.blocks > 0 then
    lineTerm.write("|")
  end
  shellTerm.restoreCursor()
end

function statusline.clear()
  statusline.blocks = {}
  statusline.redraw()
end

local oldHandler = _G.mainProgram

function _G.mainProgram()
    parallel.waitForAny(oldHandler, function()
      while true do
        statusline.redraw()
        os.sleep(1)
      end
    end)
end
